        mode=mode,
        action="decision_trend",
        symbol=symbol,
        edge_bps=f"{meta.get('edge_best', 0.0):.6f}",
        need_bps=f"{meta.get('need', 0.0):.6f}",
        hours_left=f"{meta.get('hours_left', 0.0):.3f}",
        exA=exA.id, sideA=sideA, priceA=f"{pA:.8f}", amountA="",
        orderIdA="", exB=exB.id, sideB=sideB, priceB=f"{pB:.8f}", amountB="", orderIdB="",
        notional_usdt=f"{notional_usdt:.2f}", basis_bps=f"{meta.get('basis_bps',0.0):.3f}",
        fill_ratio_A="", fill_ratio_B="",
        expected_funding_pnl_usdt=f"{expected_funding_usdt(meta.get('edge_best',0.0), notional_usdt):.4f}",
        expected_pnl_usdt=f"{expected_funding_usdt(meta.get('edge_best',0.0), notional_usdt):.4f}"
    )

    if dry_run:
        console.print(f"[cyan]DRY-RUN (trend): {exA.id} {sideA} / {exB.id} {sideB} | mode={mode} | notionalâ‰ˆ{notional_usdt:.0f}[/cyan]")
        if logger:
            logger.log({**log_base, "action": "dry_run_trend"})
        return

    # Preflight
    ok_pf, reason_pf, _amtA, _amtB = _preflight_both_legs(exA, sideA, pA, exB, sideB, pB, symbol, notional_usdt, cfg.leverage)
    if mode == "taker" and not ok_pf:
        console.print(f"[yellow]Preflight failed ({reason_pf}); skip trend entry {symbol}[/yellow]
")
        if logger:
            logger.log({**log_base, "action": "preflight_failed_trend", "reason": reason_pf})
        return

    amtA = _qty_from_notional(exA, symbol, notional_usdt, pA)
    amtB = _qty_from_notional(exB, symbol, notional_usdt, pB)

    if mode == "taker":
        try:
            oA = _safe_create_order(exA, symbol, "market", sideA, amtA)
        except Exception as e:
            console.print(f"[red]Trend leg-A failed ({exA.id}): {e}[/red]")
            if logger:
                logger.log({**log_base, "action": "trend_legA_failed", "error": str(e)})
            return
